<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qingfeng.oa.dao.EmployeeDao">

    <resultMap id="employee" type="Employee">
        <id property="sn" column="sn" javaType="String"/>
        <result property="password" column="password" javaType="String"/>
        <result property="name" column="name" javaType="String"/>
        <result property="departmentSn" column="department_sn" javaType="String"/>
        <result property="post" column="post" javaType="String"/>
        <!--查询的时候顺便把关联的部门也查出来，用这个标签association-->
        <!--属性property ，字段column就是关联的外键department_sn-->
        <association property="department" column="department_sn" javaType="Department" >
            <!--主键用id，这里的字段名column="dsn"一定不能跟上面的column="sn"一样-->
            <id property="sn" column="dsn" javaType="String"/>
            <!--非主键用result-->
            <result property="name" column="dname" javaType="String"/>
        </association>
    </resultMap>


    <insert id="insert" parameterType="Employee">
        insert into employee values(#{sn},#{password},#{name},#{departmentSn},#{post})
    </insert>
    <update id="update" parameterType="Employee">
        update employee set name=#{name},password=#{password},department_sn=#{departmentSn},post=#{post} where sn=#{sn}
    </update>
    <delete id="delete" parameterType="String">
        delete from employee where sn=#{sn}
    </delete>

    <!--查询要关联的所有属性，还有关联的department属性，所有这里使用“连接查询”-->
    <!--设置employee别名e，那么就是e.* 关联表left join，department别名d-->
    <select id="select" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
         where e.sn=#{sn}
    </select>

    <select id="selectAll" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
    </select>

    <!--查询部门经理的话，传入部门编号加一个职位，要是总经理的话，就没有部门可言-->
    <!--所有传入的两个参数可能为空	，所有这里进行sql拼接判断-->
    <select id="selectByDepartmentAndPost" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
        <!--先设置一个恒成立的条件where-->
        where e.sn is not NULL
        <!--然后在用if来进行判断-->
        <if test="dsn!=null">
            and e.department_sn=#{dsn}
        </if>
        <if test="post!=null">
            and e.post=#{post}
        </if>
    </select>
</mapper>